/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mailclient;

import java.awt.Color;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author ThanhHung
 */
public class accForm extends javax.swing.JFrame {
String email,pass,smtphost,smtpport,imaphost,imapport;
Account account;
    /**
     * Creates new form accForm
     */
    public accForm() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tbEmail = new javax.swing.JTextField();
        btOK = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tbSmtphost = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tbSmtpPort = new javax.swing.JTextField();
        lbStatus = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tbImapHost = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tbImapPort = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        rbImap = new javax.swing.JRadioButton();
        rbPop = new javax.swing.JRadioButton();
        tbPassword = new javax.swing.JPasswordField();
        cbSaveAccount = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thiết lập tài khoản");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tbEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbEmailFocusLost(evt);
            }
        });
        tbEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbEmailMouseReleased(evt);
            }
        });
        tbEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbEmailKeyTyped(evt);
            }
        });

        btOK.setText("OK");
        btOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOKActionPerformed(evt);
            }
        });

        btCancel.setText("Hủy");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        jLabel1.setText("Email");

        jLabel2.setText("Mật khẩu");

        jLabel3.setText("SMTP Host");

        jLabel4.setText("Port");

        tbSmtpPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbSmtpPortFocusLost(evt);
            }
        });
        tbSmtpPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbSmtpPortKeyReleased(evt);
            }
        });

        lbStatus.setText("Mời bạn nhập đầy đủ thông tin tài khoản.");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/user.png"))); // NOI18N
        jLabel5.setText("Thông tin tài khoản");

        jLabel6.setText("IMAP Host");

        jLabel7.setText("Port");

        jLabel10.setText("Giao thức:");

        buttonGroup1.add(rbImap);
        rbImap.setText("IMAP");
        rbImap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbImapActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPop);
        rbPop.setText("POP3");
        rbPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPopActionPerformed(evt);
            }
        });

        tbPassword.setText("jPasswordField1");
        tbPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbPasswordFocusGained(evt);
            }
        });

        cbSaveAccount.setText("Lưu thông tin tài khoản.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rbPop)
                    .addComponent(jLabel5))
                .addGap(97, 97, 97))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(btOK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(69, 69, 69)
                                        .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(cbSaveAccount))
                                    .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tbSmtphost, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tbSmtpPort, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(36, 36, 36))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tbEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tbPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(tbImapHost, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tbImapPort, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(rbImap)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(rbImap)
                    .addComponent(rbPop))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbEmail)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(tbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tbImapHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tbImapPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbSmtphost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbSmtpPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbSaveAccount)
                .addGap(11, 11, 11)
                .addComponent(lbStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btOK)
                    .addComponent(btCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Account getAccount()
    {
        return account;
    }
    
    public Properties getProperties()
    {
        Properties pro = System.getProperties();
         if (rbImap.isSelected())
         {
            pro.put("mail.imap.host",imaphost);
            pro.put("mail.imap.port",imapport);
       
            pro.put("mail.store.protocol","imap");
            pro.put("mail.imap.socketFactory.class", javax.net.ssl.SSLSocketFactory.class.getName());
            
            pro.setProperty("mail.imap.socketFactory.fallback","false");
            pro.setProperty("mail.imap.socketFactory.port", String.valueOf(imapport));
         }
        else
         {
             pro.put("mail.pop3.host",imaphost);
             pro.put("mail.pop3.port",imapport);
       
             
             pro.put("mail.store.protocol","pop3");
             pro.put("mail.pop3.socketFactory.class", javax.net.ssl.SSLSocketFactory.class.getName());
            
             pro.setProperty("mail.pop3.socketFactory.fallback","false");
             pro.setProperty("mail.pop3.socketFactory.port", String.valueOf(imapport));
         }
         
        
        return pro;
    }
    public boolean isFill()
    {
        if((tbEmail.getText().isEmpty())||(tbPassword.getText().isEmpty()||(tbSmtpPort.getText()).isEmpty()||(tbSmtphost.getText().isEmpty())))
            return false;
        return true;
    }
    private void btOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOKActionPerformed
        // TODO add your handling code here:
       
        
        if (!isFill())
        {
            lbStatus.setForeground(Color.red);
            lbStatus.setText("Mời bạn nhập đầy đủ thông tin tài khoản!");
            
        }
        else 
        {
            pass = tbPassword.getText();
        
        
            smtphost = tbSmtphost.getText();
            smtpport = tbSmtpPort.getText();
            imaphost = tbImapHost.getText();
            imapport = tbImapPort.getText();
            email = tbEmail.getText();
            account = new Account(email,pass,smtphost,smtpport,imaphost,imapport);
            if (cbSaveAccount.isSelected())
                try {
                    ioObject.writeObject( "saveAccount.dat",account);
            } catch (IOException ex) {
                Logger.getLogger(accForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.dispose();
        }
    }//GEN-LAST:event_btOKActionPerformed

    private void tbEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbEmailKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tbEmailKeyTyped

    private void tbEmailMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEmailMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tbEmailMouseReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        File f = new File("src/dat/saveAccount.dat");
        if (f.exists())
        {
            try {
                Account ac = (Account) ioObject.readObject("saveAccount.dat");
                tbEmail.setText(ac.getEmail());
                tbPassword.setText(ac.getPassword());
                tbImapHost.setText(ac.getImapHost());
                if (ac.getImapHost().contains("pop"))
                    rbPop.setSelected(true);
                else rbImap.setSelected(true);
                tbImapPort.setText(ac.getImapPort());
                tbSmtphost.setText(ac.getSmtpHost());
                tbSmtpPort.setText(ac.getSmtpPort());
            } catch (IOException ex) {
                Logger.getLogger(accForm.class.getName()).log(Level.SEVERE, null, ex);                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(accForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
        rbImap.setSelected(true);
        if (!isFill())
        {
            lbStatus.setForeground(Color.red);
            lbStatus.setText("Mời bạn nhập đầy đủ thông tin tài khoản!");
            //btSignin.setEnabled(false);
        }
        else 
        {
            lbStatus.setForeground(Color.green);
            lbStatus.setText("OK ");
            btOK.setEnabled(true);
        }
        }
    }//GEN-LAST:event_formWindowActivated

    private void tbSmtpPortKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbSmtpPortKeyReleased
        // TODO add your handling code here:
        if (!isFill())
        {
            lbStatus.setForeground(Color.red);
            lbStatus.setText("Mời bạn nhập đầy đủ thông tin tài khoản!");
            btOK.setEnabled(false);
        }
        else 
        {
            lbStatus.setForeground(Color.green);
            lbStatus.setText("OK ");
            btOK.setEnabled(true);
        }
    }//GEN-LAST:event_tbSmtpPortKeyReleased

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if (!isFill())
        {
            lbStatus.setForeground(Color.red);
            lbStatus.setText("Mời bạn nhập đầy đủ thông tin tài khoản!");
            btOK.setEnabled(false);
        }
        else 
        {
            lbStatus.setForeground(Color.green);
            lbStatus.setText("OK ");
            btOK.setEnabled(true);
        }
    }//GEN-LAST:event_formMouseClicked

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
    }//GEN-LAST:event_btCancelActionPerformed

    private void rbImapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbImapActionPerformed
        // TODO add your handling code here:
        jLabel6.setText("IMAP Host");
        
        
        
    }//GEN-LAST:event_rbImapActionPerformed

    private void rbPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPopActionPerformed
        // TODO add your handling code here:
        jLabel6.setText("POP3 Host");
    }//GEN-LAST:event_rbPopActionPerformed

    private void tbPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbPasswordFocusGained
        // TODO add your handling code here:
        tbPassword.setText("");
    }//GEN-LAST:event_tbPasswordFocusGained

    private void tbEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbEmailFocusLost
        // TODO add your handling code here:
        String[] em;
        email = tbEmail.getText();
        if (email.contains("@")&&(email.contains(".")))
        {
            em = email.split("@");
            if (em[1].startsWith("gmail"))
            {
                if (rbImap.isSelected())
                {
                    tbImapHost.setText("imap.gmail.com");
                    tbImapPort.setText("993");
                    tbSmtphost.setText("smtp.gmail.com");
                    tbSmtpPort.setText("587");
                }
                else if(rbPop.isSelected())
                {
                    tbImapHost.setText("pop.gmail.com");
                    tbImapPort.setText("995");
                    tbSmtphost.setText("smtp.gmail.com");
                    tbSmtpPort.setText("587");
                }
            }
            lbStatus.setForeground(Color.black);
            lbStatus.setText("Mời bạn nhập đầy đủ thông tin tài khoản.");
        }

        else
        {
            lbStatus.setForeground(Color.red);
            lbStatus.setText("Bạn đã nhập sai định dạng Email, mời bạn nhập lại!");
            btOK.setEnabled(false);
        }
    }//GEN-LAST:event_tbEmailFocusLost

    private void tbSmtpPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbSmtpPortFocusLost
        // TODO add your handling code here:
        if (!isFill())
        {
            lbStatus.setForeground(Color.red);
            lbStatus.setText("Mời bạn nhập đầy đủ thông tin tài khoản!");
            btOK.setEnabled(false);
        }
        else 
        {
            lbStatus.setForeground(Color.green);
            lbStatus.setText("OK ");
            btOK.setEnabled(true);
        }
    }//GEN-LAST:event_tbSmtpPortFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(accForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(accForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(accForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(accForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new accForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btOK;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbSaveAccount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JRadioButton rbImap;
    private javax.swing.JRadioButton rbPop;
    private javax.swing.JTextField tbEmail;
    private javax.swing.JTextField tbImapHost;
    private javax.swing.JTextField tbImapPort;
    private javax.swing.JPasswordField tbPassword;
    private javax.swing.JTextField tbSmtpPort;
    private javax.swing.JTextField tbSmtphost;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon/process.png")));
    }
}
